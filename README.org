* prompt2
[[https://github.com/fimblo/prompt2/actions/workflows/ubuntu.yml/badge.svg]]
[[https://github.com/fimblo/prompt2/actions/workflows/macos.yml/badge.svg]]

prompt2 - a fast binary which generates a configurable and dynamic bash prompt

This is still work in progress. See [[https://github.com/fimblo/prompt2/issues][Issues]] for feature ideas. Oh and bugs of course.

** Aspects which can be shown in the prompt

The =prompt2= binary gathers info from the environment and can use these to
generate a dynamic prompt.

#+begin_example
$ bin/prompt2-state-dump
CWD.full                     # full path to .
CWD.basename                 # basename of .
CWD.git_path                 # I'm at the root of the git repo
CWD.home_path                # path to . from HOME
Repo.is_git_repo             # if . is a git repo
Repo.name                    # name of git repo
Repo.branch_name             # name of branch
Repo.rebase_active           # if rebase is in progress
Repo.conflicts               # number of conflicts in repo
Repo.ahead                   # number of commits ahead of remote
Repo.behind                  # number of commits behind remote
Repo.staged                  # number of staged files
Repo.modified                # number of changed modified files
Repo.untracked               # number of untracked files
AWS.token_is_valid           # if there is a valid AWS SSO token
AWS.token_remaining_hours    # AWS SSO token: how many hours are remaining
AWS.token_remaining_minutes  # AWS SSO token: how many minutes are remaining
#+end_example

(The =prompt2-state-dump= binary is used in the tests for the =get-status.c=
library, which is used to to get environment status.)

** Configuring the prompt

See [[https://github.com/fimblo/prompt2/blob/main/config/set-prompt.ini.sh][config/set-prompt.ini.sh]] for a simple example.

To run:
#+begin_src bash
  source config/set-prompt.ini.sh
#+end_src

If you like what you see, you can add it to your =.bashrc= (after updating the path).

** Prerequisites
*** Debian
- =apt-get install build-essential libgit2 bats libjson-c-dev uthash-dev=
*** Mac
- =xcode-select --install ; brew install libgit2 bats json-c uthash=
- ... and if you're bash is the default provided by the OS, you'll need to =brew install bash= to get a more modern version.
** Building and testing
- =make= will build the binary and run all tests.
- =make install-local= will install to ~/bin
- =make help= for the rest of the targets
